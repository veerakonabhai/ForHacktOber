#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include <iostream>
using namespace std;
struct LLNode{
  int data;
  struct LLNode *next;
};
bool isPalindromeUtil(LLNode **left, LLNode *right)
{
   /* stop recursion when right becomes NULL */
   if (right == NULL)
      return true;
 
   /* If sub-list is not palindrome then no need to
       check for current left and right, return false */
   bool isp = isPalindromeUtil(left, right->next);
   if (isp == false)
      return false;
 
   /* Check values at current left and right */
   bool isp1 = (right->data == (*left)->data);
 
   /* Move left to next node */
   *left = (*left)->next;
 
   return isp1;
}

bool isPalindromicList(LLNode *A)
{
  return isPalindromeUtil(&A,A);
}
